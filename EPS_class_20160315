from openpyxl import load_workbook
from sets import Set
import sys

reload(sys)
sys.setdefaultencoding('utf-8')


class EPS:

    def __init__(self, filename):
        self.excelsheet = filename
        self.excelsheet = load_workbook(filename=self.excelsheet)


    def excel_gettabs(self, tabname, indicator = 0):
        tab_all = self.excelsheet.get_sheet_names()
        if tabname == "":
            for tabs in tab_all:
                print tabs
        else:
            for tabs in tab_all:
                if tabname in tabs:
                    print tabname
                else:
                    pass

    def excel_get_year(self,worksheet):
        periods_year = Set([])
        tab_all = self.excelsheet.get_sheet_names()
        for tabs in tab_all:
            if worksheet in tabs:
                sheet_name = tabs
            else:
                pass
        sheet_all = self.excelsheet.get_sheet_by_name(sheet_name)
        first_row = sheet_all.range('A1:Z1')
        for cell in first_row:
            for period_location in cell:
                if len(str(period_location.value)) >= 16:
                    periods_year.add(str(period_location.value)[:4])
                else:
                    pass
        for year_info in periods_year:
            print year_info,


    def excel_get_all_periods(self,worksheet,indicator = 0):
        tab_all = self.excelsheet.get_sheet_names()
        for tabs in tab_all:
            if worksheet in tabs:
                sheet_name = tabs
            else:
                pass
        sheet_all = self.excelsheet.get_sheet_by_name(sheet_name)
        first_row = sheet_all.range('A1:Z1')
        periods_all = []
        for cell in first_row:
            for period_location in cell:
                if len(str(period_location.value)) >= 16:
                    period_location_index = str(period_location).find(".")
                    period_val_loc = period_location.value + "@@" + str(period_location)[period_location_index+1:period_location_index+2]
                    periods_all.append(str(period_val_loc))
                else:
                    pass
        if indicator == 1:
            for period in periods_all:
                print period
        return periods_all


    def excel_getdata(self, worksheet, text, indicator = 0):
        sheet_all = self.excelsheet.get_sheet_by_name(worksheet)
        sheet_rows = sheet_all.rows
        for sheet_row in sheet_rows:
            for cell in sheet_row:
                cell_value = str(cell.value)
                if text in cell_value:
                    cell_location_fullname = str(cell)
                    cell_location_index = cell_location_fullname.find(".") + 1
                    cell_location = str(cell)[cell_location_index:-1]
                    cell_val_loc = cell_value + "\t" + "@@" + cell_location
                    if indicator == 1:
                        print cell_val_loc
                    return cell_val_loc
                else:
                    continue


    def excel_get_value(self, worksheet, field, period, indicator=0):
        valueloc = []
        periods_all = self.excel_get_all_periods(worksheet)
        for periods in periods_all:
            if period in periods:
                y_index = str(periods).find("@@")
                y_loc = str(periods)[int(y_index)+2:]
                valueloc.append(y_loc)
        
        field_val_loc = self.excel_getdata(worksheet, field)
        x_index = str(field_val_loc).find("@@")
        x_loc = str(field_val_loc)[int(x_index)+3:]
        valueloc.append(x_loc)
        yx = "".join(valueloc)
        cell_val = self.excelsheet.get_sheet_by_name(worksheet).cell(yx)
        if indicator == 1:
            print cell_val.value
        return cell_val.value


test = EPS('test_1.xlsx')
test.excel_gettabs("")
test.excel_getdata("FLEX - Income Statement-CORE", "IS064", 1)
test.excel_get_year("FLEX - Income Statement-CORE")
test.excel_get_all_periods("FLEX - Income Statement-CORE", 1)
test.excel_get_value("FLEX - Income Statement-CORE", "IS097", "2013-A1-M(FP)-IA",1)
# test.excel_get_value("Sheet 1", "A1041", "2013-A1-M(FP)-IA")ome Statement-ARD","S3862")
#test2 = QCscanner('test4.xlsx')
# test2.excel_gettabs("")
#test2.QC_getdata("IS", "IM177",1)





"""

    def QC_getdata(self, worksheet, text, indicator = 0):
        data = self.excelsheet.get_sheet_by_name(worksheet)
        cell = data.rows
        for i in cell:
            for l in i:
                datavalue = str(l.value)
                if text in datavalue:
                    num = str(l)
                    alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                    number = num.find(".") + 1
                    loc = str(l)[number:-1]
                    newloc1 = alphabet.find(loc[:1]) + 2
                    newnewloc1 = str(alphabet[newloc1]) +loc[1:]
                    newloc2 = alphabet.find(loc[:1]) + 3
                    newnewloc2 = str(alphabet[newloc2]) + loc[1:]
                    result = datavalue + "\t" + "@@" + loc + " &&" + newnewloc1 + newnewloc2
                    if indicator == 1:
                        print result
                    return result
                else:
                    continue
"""                    
